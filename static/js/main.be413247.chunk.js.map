{"version":3,"sources":["components/AddMovie.module.css","components/Movie.module.css","components/MoviesList.module.css","components/Movie.js","components/MoviesList.js","components/AddMovie.js","App.js","index.js"],"names":["module","exports","control","movie","movies-list","Movie","props","react_default","a","createElement","className","classes","title","releaseDate","openingText","MovieList","movies","map","components_Movie","key","id","release","AddMovie","titleRef","useRef","openingTextRef","releaseDateRef","onSubmit","event","preventDefault","current","value","onAddMovie","htmlFor","type","ref","rows","App","_React$useState","React","useState","_React$useState2","Object","slicedToArray","setMovies","_React$useState3","_React$useState4","isLoading","setIsLoading","_React$useState5","_React$useState6","error","setError","fetchMoviesHandler","useCallback","asyncToGenerator","_regeneratorRuntime","mark","_callee","response","data","loadedData","wrap","_context","prev","next","fetch","sent","ok","Error","json","push","t0","message","stop","_addMovieHandler","_callee2","_context2","method","body","JSON","stringify","headers","Content-Type","console","log","apply","this","arguments","useEffect","displayContent","length","MoviesList","Fragment","components_AddMovie","_x","onClick","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.be413247.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"control\":\"AddMovie_control__qAXWd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movie\":\"Movie_movie__1pq23\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movies-list\":\"MoviesList_movies-list__1Y1-3\"};","import React from 'react';\n\nimport classes from './Movie.module.css';\n\nconst Movie = (props) => {\n  return (\n    <li className={classes.movie}>\n      <h2>{props.title}</h2>\n      <h3>{props.releaseDate}</h3>\n      <p>{props.openingText}</p>\n    </li>\n  );\n};\n\nexport default Movie;\n","import React from 'react';\n\nimport Movie from './Movie';\nimport classes from './MoviesList.module.css';\n\nconst MovieList = (props) => {\n  return (\n    <ul className={classes['movies-list']}>\n      {props.movies.map((movie) => (\n        <Movie\n          key={movie.id}\n          title={movie.title}\n          releaseDate={movie.release}\n          openingText={movie.openingText}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default MovieList;\n","import React, { useRef } from \"react\";\n\nimport classes from \"./AddMovie.module.css\";\n\nfunction AddMovie(props) {\n  const titleRef = useRef(\"\");\n  const openingTextRef = useRef(\"\");\n  const releaseDateRef = useRef(\"\");\n\n  function submitHandler(event) {\n    event.preventDefault();\n\n    const movie = {\n      title: titleRef.current.value,\n      openingText: openingTextRef.current.value,\n      releaseDate: releaseDateRef.current.value,\n    };\n\n    props.onAddMovie(movie);\n  }\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className={classes.control}>\n        <label htmlFor=\"title\">Title</label>\n        <input type=\"text\" id=\"title\" ref={titleRef} />\n      </div>\n      <div className={classes.control}>\n        <label htmlFor=\"opening-text\">Opening Text</label>\n        <textarea rows=\"5\" id=\"opening-text\" ref={openingTextRef}></textarea>\n      </div>\n      <div className={classes.control}>\n        <label htmlFor=\"date\">Release Date</label>\n        <input type=\"text\" id=\"date\" ref={releaseDateRef} />\n      </div>\n      <button>Add Movie</button>\n    </form>\n  );\n}\n\nexport default AddMovie;\n","import React from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport AddMovie from \"./components/AddMovie\";\nimport \"./App.css\";\n\nfunction App() {\n  const [movies, setMovies] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [error, setError] = React.useState(null);\n\n  const fetchMoviesHandler = React.useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(\n        \"https://react-movies-https-default-rtdb.firebaseio.com/movies.json\"\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n      const data = await response.json();\n\n      const loadedData = [];\n\n      for (const key in data) {\n        loadedData.push({\n          id: key,\n          title: data[key].title,\n          openingText: data[key].openingText,\n          releaseDate: data[key].releaseDate,\n        });\n      }\n\n      setMovies(loadedData);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n\n  React.useEffect(() => {\n    fetchMoviesHandler();\n  }, [fetchMoviesHandler]);\n\n  async function addMovieHandler(movie) {\n    const response = await fetch(\n      \"https://react-movies-https-default-rtdb.firebaseio.com/movies.json\",\n      {\n        method: \"POST\",\n        body: JSON.stringify(movie),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        }\n      }\n    );\n    const data = await response.json();\n    console.log(data);\n  }\n\n  let displayContent = <p>No Movies Found</p>;\n  if (movies.length > 0) {\n    displayContent = <MoviesList movies={movies} />;\n  }\n  if (error) {\n    displayContent = <p>Something went wrong!</p>;\n  }\n  if (isLoading) {\n    displayContent = <p>Loading...</p>;\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <AddMovie onAddMovie={addMovieHandler} />\n      </section>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>{displayContent}</section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}